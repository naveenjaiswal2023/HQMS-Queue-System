@using HQMS.UI.Interfaces
@using HQMS.UI.Models
@inject IHttpContextAccessor HttpContextAccessor
@inject IMenuService MenuService

@{
    var userRole = HttpContextAccessor.HttpContext?.Session.GetString("UserRole");
    var isLoggedIn = !string.IsNullOrEmpty(HttpContextAccessor.HttpContext?.Session.GetString("UserEmail"));
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString();
    var menus = await MenuService.GetMenuHierarchyAsync();
}

@if (isLoggedIn && userRole == "Admin" && menus != null)
{
    <div class="border-end bg-light" id="sidebar-wrapper">
        <div class="sidebar-heading d-flex justify-content-between align-items-center">
            <button class="btn btn-sm btn-light" id="toggleSidebar" title="Toggle Sidebar">
                <i class="fas fa-bars"></i>
            </button>
        </div>

        <div class="list-group list-group-flush">
            @foreach (var menu in menus)
            {
                var menuController = menu.Url?.Trim('/').Split('/').FirstOrDefault()?.ToLower();
                var isActive = string.Equals(menuController, currentController?.ToLower(), StringComparison.OrdinalIgnoreCase);

                <a href="@menu.Url"
                   class="list-group-item list-group-item-action @(isActive ? "active-link" : "")">
                    <i class="@menu.Icon"></i>
                    <span>@menu.Name</span>
                </a>

                @* Render child menus if available *@
                @if (menu.Children != null && menu.Children.Any())
                {
                    foreach (var child in menu.Children)
                    {
                        var childController = child.Url?.Trim('/').Split('/').FirstOrDefault()?.ToLower();
                        var isChildActive = string.Equals(childController, currentController?.ToLower(), StringComparison.OrdinalIgnoreCase);

                        <a href="@child.Url"
                           class="list-group-item list-group-item-action ps-5 @(isChildActive ? "active-link" : "")">
                            <i class="@child.Icon me-2"></i>
                            @child.Name
                        </a>
                    }
                }
            }
        </div>
    </div>
}
